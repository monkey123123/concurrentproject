<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beanpodtech.pkms.dbadapter.dao.IUserDao">


    <!-- USER_SESSION 操作 -->
    <insert id="insertUserSession" parameterType="UserSession">
        INSERT INTO USER_SESSION(USER_ID, SESSION_ID, IP_ADDRESS, HASH, OPER_ID, OPER_TIME)
        VALUES (#{userId}, #{sessionId}, #{ipAddress}, #{hash}, #{operId}, CURRENT_TIMESTAMP )
    </insert>

    <update id="updateUserSession" parameterType="UserSession">
        UPDATE USER_SESSION
        SET 
        	<if test="sessionId != null">SESSION_ID = #{sessionId},</if>
        	<if test="hash != null">HASH = #{hash},</if>
        	OPER_ID = #{operId},
            OPER_TIME = CURRENT_TIMESTAMP
        WHERE USER_ID = #{userId}
    </update>

    <delete id="deleteUserSession" parameterType="int">
        DELETE FROM USER_SESSION WHERE USER_ID = #{userId}
    </delete>

    <select id="selectUserSession" parameterType="UserSession" resultType="UserSession">
        SELECT USER_ID AS 'userId',
               SESSION_ID AS 'sessionId',
               IP_ADDRESS AS 'ipAddress',
               HASH AS 'hash',
               OPER_ID AS 'operId',
               OPER_TIME AS 'oeprTime'
        FROM USER_SESSION
        <where>
            <if test="userId > 0 ">
                AND USER_ID = #{userId}
            </if>
            <if test="hash != null">
                AND HASH = #{hash}
            </if>
        </where>

    </select>

    <!-- USER_ROLE 操作 -->
    <insert id="insertUserRole" >
        INSERT INTO USER_ROLE(USER_ID, ROLE_ID, OPER_ID, OPER_TIME)
        VALUES
        <foreach collection="list" item="item" separator=",">
        (#{userId}, #{item}, #{operId}, CURRENT_TIMESTAMP)
        </foreach>
    </insert>

    <delete id="deleteUserRole" parameterType="int">
        DELETE FROM USER_ROLE WHERE USER_ID = #{userId}
    </delete>

    <select id="selectUserRole" parameterType="int" resultType="UserRole">
        SELECT USER_ID AS 'userId', ROLE_ID AS 'roleId'
        FROM USER_ROLE
        WHERE USER_ID = #{userId}
    </select>

    <!-- ROLE 操作-->
    <select id="selectRole" resultType="Role">
        SELECT ROLE_ID AS 'roleId', ROLE_NAME AS 'roleName', DESCRIPTION AS 'description'
        FROM ROLE
        WHERE DELETE_FLAG = 1
    </select>

    <!-- USER_INFO 操作-->
    <sql id="userInfoCol">
        USER_ID AS 'userId',USER_NAME AS 'userName',EMAIL AS 'email',PASSWORD AS 'password',
        DONGLE_ID AS 'dongleId',USER_TYPE AS 'userType',CITIZEN_TYPE AS 'citizenType',
        CITIZEN_ID AS 'citizenId',ADDRESS AS 'address',TEL AS 'telephone',COMMON_NAME AS 'commonName',
        COUNTRY_NAME AS 'countryName',STATE_OR_PROVINCE_NAME AS 'stateOrProvinceName',
        LOCALITY_NAME AS 'localityName',ORGANIZATION_NAME AS 'organizationName',
        ORGANIZATION_UNIT_NAME AS 'organizationUnitName',NEED_ACTIVIE AS 'needActive',
        USER_LOCK AS 'lock',DELETE_FLAG AS 'deleteFlag',OPER_ID AS 'operId',OPER_TIME AS 'operTime'
    </sql>

    <select id="selectUserInfoByUserName" parameterType="string" resultType="UserInfo">
        SELECT
        <include refid="userInfoCol" />
        FROM USER_INFO
        WHERE USER_NAME = #{userName}
    </select>

    <select id="selectUserInfoByRoles" parameterType="java.util.List" resultType="UserInfo">
        SELECT
        <include refid="userInfoCol" />
        FROM USER_INFO
        WHERE USER_ID IN (SELECT DISTINCT USER_ID
                          FROM USER_ROLE
                          WHERE ROLE_ID IN
                          <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                             #{item}
                          </foreach>)
    </select>

    <insert id="insertUserInfo" parameterType="UserInfo" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO USER_INFO(USER_NAME,EMAIL,PASSWORD,DONGLE_ID,USER_TYPE,CITIZEN_TYPE,CITIZEN_ID,
        ADDRESS,TEL,COMMON_NAME,COUNTRY_NAME,STATE_OR_PROVINCE_NAME,LOCALITY_NAME,ORGANIZATION_NAME,
        ORGANIZATION_UNIT_NAME,NEED_ACTIVIE,USER_LOCK,DELETE_FLAG,OPER_ID,OPER_TIME)
        VALUES (#{userName},#{email},#{password},#{dongleId},#{userType},#{citizenType},#{citizenId},
        #{address},#{telephone},#{commonName},#{countryName},#{stateOrProvinceName},#{localityName},#{organizationName},
        #{organizationUnitName},#{needActive},#{lock},#{deleteFlag},#{operId},CURRENT_TIMESTAMP)
    </insert>

    <update id="updateUserInfoByUserName" parameterType="UserInfo" useGeneratedKeys="true" keyProperty="userId" >
        UPDATE USER_INFO
        SET EMAIL = #{email},
            PASSWORD = #{password},
            DONGLE_ID = #{dongleId},
            USER_TYPE = #{userType},
            CITIZEN_TYPE = #{citizenType},
            CITIZEN_ID = #{citizenId},
            ADDRESS = #{address},
            TEL = #{telephone},
            COMMON_NAME = #{commonName},
            COUNTRY_NAME = #{countryName},
            STATE_OR_PROVINCE_NAME = #{stateOrProvinceName},
            LOCALITY_NAME = #{localityName},
            ORGANIZATION_NAME = #{organizationName},
            ORGANIZATION_UNIT_NAME = #{organizationUnitName},
            NEED_ACTIVIE = #{needActive},
            USER_LOCK = #{lock},
            DELETE_FLAG = #{deleteFlag},
            OPER_ID = #{operId},
            OPER_TIME = CURRENT_TIMESTAMP
        WHERE USER_NAME = #{userName}
    </update>

    <update id="deleteUserInfo" parameterType="UserInfo">
        UPDATE USER_INFO
        SET DELETE_FLAG = 0,
            OPER_ID = #{operId},
            OPER_TIME = CURRENT_TIMESTAMP
        WHERE USER_NAME = #{userName}
    </update>

    <delete id="deleteUser" parameterType="UserInfo">
        DELETE FROM USER_INFO WHERE USER_NAME = #{userName}
    </delete>

	<!--add by Allen -->
    <resultMap id="ResultMap_Actions" type="com.beanpodtech.pkms.common.model.Actions" >
        <id column="ACTION_ID" property="actionId" jdbcType="VARCHAR" />
        <result column="ACTION_TYPE" property="actionType" jdbcType="VARCHAR" />
        <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
        <result column="DELETE_FLAG" property="deleteFlag" jdbcType="INTEGER" />
        <result column="OPER_ID" property="operId" jdbcType="VARCHAR" />
        <result column="OPER_TIME" property="operTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <!--通过userName查询该用户所有Action_Type-->
    <select id="selectActionsByUserName" resultMap="ResultMap_Actions"
            parameterType="map">
    select ACTION_ID,ACTION_TYPE,DELETE_FLAG,OPER_ID,OPER_TIME
    from actions
    where ACTION_ID in (
        select ar.ACTION_ID from actions_of_role ar
        where ar.ROLE_ID in (
            select ur.role_id from user_role ur
            where ur.USER_ID = #{userId}
        )
    )

    </select>

</mapper>