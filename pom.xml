<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>me.monkey</groupId>
    <artifactId>concurrent</artifactId>
    <packaging>pom</packaging>
    <version>2.1</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.3.RELEASE</version>
        <relativePath/>
    </parent>
    <modules>
		<!--<module>concurrent-common</module>-->
		<module>concurrent-rule-engine</module>
        <module>concurrent-system</module>
        <module>concurrent-gateway</module>
        <module>concurrent-akkacluster</module>
        <module>concurrent-hystrix-dashboard</module>
        <module>concurrent-scheduler</module>
        <module>concurrent-user</module>
        <module>concurrent-zipkin</module>
        <module>concurrent-cassandra</module>
    </modules>
    <name>concurrent</name>

    <properties>
        <scala.version>2.13</scala.version>
        <akka.version>2.6.10</akka.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <jedis.version>2.9.0</jedis.version>
        <log4jdbc.version>1.16</log4jdbc.version>
        <swagger.version>2.9.2</swagger.version>
        <fastjson.version>1.2.54</fastjson.version>
        <druid.version>1.1.10</druid.version>
        <hutool.version>[4.1.12,)</hutool.version>
        <commons-pool2.version>2.5.0</commons-pool2.version>
        <mapstruct.version>1.2.0.Final</mapstruct.version>
        <!--<grpc.version>1.6.1</grpc.version>-->
        <protobuf.version>3.3.0</protobuf.version>
        <lombok.version>1.18.12</lombok.version>

        <jjwt.version>0.9.1</jjwt.version>
        <springboot.version>2.3.3.RELEASE</springboot.version>
        <springcloud.version>Hoxton.SR8</springcloud.version>
        <zookeeper.version>3.4.14</zookeeper.version>
        <curator.version>4.0.1</curator.version>
        <spring-kafka.version>2.6.2</spring-kafka.version>
        <druid.version>1.1.20</druid.version>
        <httpclient.version>4.5.10</httpclient.version>
        <json.version>20190722</json.version>
        <pulsar.version>2.3.2</pulsar.version>
        <log4j-core.version>2.11.2</log4j-core.version>
        <query-dsl-version>4.3.1</query-dsl-version>
        <common-objstorage.version>1.7.2.2-SNAPSHOT</common-objstorage.version>
        <spring-cloud-alibaba.version>2.2.1.RELEASE</spring-cloud-alibaba.version>
        <token-bucket.version>1.7</token-bucket.version>
        <powerjob.worker.starter.version>3.3.1</powerjob.worker.starter.version>
        <powerjob-client.version>3.3.1</powerjob-client.version>

        <zipkin.version>2.9.3</zipkin.version>
        <spring-boot-starter-webflux.version>2.1.4.RELEASE</spring-boot-starter-webflux.version>
        <gson.version>2.8.9</gson.version>
    </properties>
    <!--统一规定版本-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.kfcfans</groupId>
                <artifactId>powerjob-worker-spring-boot-starter</artifactId>
                <version>${powerjob.worker.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.kfcfans</groupId>
                <artifactId>powerjob-client</artifactId>
                <version>${powerjob-client.version}</version>

            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot-starter-webflux.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${springcloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- alibaba cloud -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-server</artifactId>
                <version>${zipkin.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-autoconfigure-ui</artifactId>
                <version>${zipkin.version}</version>
            </dependency>

            <!-- lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!--Spring boot start-->
            <!-- gateway必须排除该引用，否则报错
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
            </dependency>
            -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- 启用security 访问接口报401        <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
            </dependency>-->
            <!-- spring cache -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-cache</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- redis 不能在父工程引入redis，子工程如果用不到启动时会报错 -->
            <!--
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
            </dependency>
            -->
            <!--Spring boot end-->

            <!--spring2.0集成redis所需common-pool2-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <!-- RESTful APIs swagger2 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-models</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>1.5.21</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-models</artifactId>
                <version>1.5.21</version>
            </dependency>

            <!-- fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!--mapStruct依赖-->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>1</version>
            </dependency>
            <!-- add by allen -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-cassandra</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-actor-typed_${scala.version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <!--正式工程里必须去除test包-->
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-actor-testkit-typed_${scala.version}</artifactId>
                <scope>test</scope>
                <version>${akka.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!--所有工程共有的依赖，尽量不要放太多，避免子工程打的包太大-->
    <dependencies>

    </dependencies>

    <build>
        <plugins>
            <!-- 打包时跳过测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
